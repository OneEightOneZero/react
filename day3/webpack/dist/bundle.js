!function(t){var r={};function _(e){if(r[e])return r[e].exports;var n=r[e]={i:e,l:!1,exports:{}};return t[e].call(n.exports,n,n.exports,_),n.l=!0,n.exports}_.m=t,_.c=r,_.d=function(e,n,t){_.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},_.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},_.t=function(n,e){if(1&e&&(n=_(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(_.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var r in n)_.d(t,r,function(e){return n[e]}.bind(null,r));return t},_.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return _.d(n,"a",n),n},_.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},_.p="",_(_.s="./src/index.js")}({"./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _react_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./react.js */ "./src/react.js");\n/* harmony import */ var _react_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_react_js__WEBPACK_IMPORTED_MODULE_0__);\n// import $ from "jquery";\n// $("body").html("hello world")\n// JSX\nlet template = _react_js__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {\n  "class": "red"\n}, _react_js__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("p", {\n  name: "lemon"\n}, "Hello world")); // createElement  第一个参数是节点的名字，第二个参数该标签属性的名字，第三个是标签内的内容\n// React.createElement("div", null, )\n// JS\n// let template = React.createElement("div", null, React.createElement("p", null, "Hello world"));\n// JSX其实就是转化为JS的一个由React.createElement描述的一个DOM结构\n\n\nconsole.log(_react_js__WEBPACK_IMPORTED_MODULE_0___default.a);\nlet JSXObj = _react_js__WEBPACK_IMPORTED_MODULE_0___default.a.createElement("div", {\n  "class": "red"\n}, "hello world");\nconsole.log(JSXObj); // let template = React.createElement("div", {"class": "red"}, React.createElement("p", {name: "lemon"}, "Hello world"));\n\n//# sourceURL=webpack:///./src/index.js?')},"./src/react.js":
/*!**********************!*\
  !*** ./src/react.js ***!
  \**********************/
/*! no static exports found */function(module,exports){eval("function createElement(type, props, ...children) {\n  props = Object.assign({}, props);\n  props.children = [].concat(...children) // 筛选\n  .filter(child => child != null && child !== false) // 遍历操作 如果是对象则筛选掉(这里会筛选JSX对象和组件对象)，留下来文本节点进行处理\n  .map(child => child instanceof Object ? child : createTextElement(child));\n  return {\n    type,\n    props\n  };\n}\n\nfunction createTextElement(value) {\n  // 把文本节点从字符串变为对象{type:'TEXT_ELEMENT',props:{nodeValue:文本值}}\n  // 注意文本节点没有传children，所以children是肯定是空数组\n  return createElement('TEXT_ELEMENT', {\n    nodeValue: value\n  });\n}\n\nmodule.exports = {\n  createElement,\n  createTextElement\n};\n\n//# sourceURL=webpack:///./src/react.js?")}});